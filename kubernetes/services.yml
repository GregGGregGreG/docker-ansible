packetbeat-agent: &packetbeat-agent
  name: packetbeat-agent
  image: minux:5000/packetbeat-agent:latest
  imagePullPolicy: Always

etcd-host: &etcd-host
  {name: ETCD_HOST, value: "192.168.1.160"}

services:
  - name: uptime
    ports:
      - port: 8082
    annotations:
      nginx:
        - http:
            - server: uptime.*
              locations:
                - /
    containers:
      - name: uptime
        image: minux:5000/uptime:latest
        imagePullPolicy: Always
        env:
          - <<: *etcd-host

  - name: prometheus
    ports:
      - port: 9090
    annotations:
      nginx:
        - http:
            - server: prometheus.*
              locations:
                - /
            - server: default
              locations:
                - /prometheus
    containers:
      - name: prometheus
        image: minux:5000/prometheus:latest
        imagePullPolicy: Always
        env:
          - <<: *etcd-host

  - name: keycloak
    ports:
      - port: 8080
    annotations:
      nginx:
        - http:
            - server: keycloak.*
              locations:
                - /
    containers:
      - name: keycloak
        image: minux:5000/keycloak:latest
        imagePullPolicy: Always
      - <<: *packetbeat-agent
        env:
          - {name: PACKETBEAT_HTTP_PORTS, value: "8080"}

  - name: packetbeat
    ports:
      - {port: 5601, name: kibana}
      - {port: 9200, name: elasticsearch}
    annotations:
      nginx:
        - http:
            - server: packetbeat.*
              locations:
                - /
    containers:
      - name: packetbeat
        image: minux:5000/packetbeat:latest
        imagePullPolicy: Always

  - name: odoo
    ports:
      - port: 8069
    annotations:
      nginx:
        - http:
            - server: odoo.*
              locations:
                - /
    containers:
      - name: odoo
        image: minux:5000/odoo:latest
        imagePullPolicy: Always
      - <<: *packetbeat-agent
        env:
          - {name: PACKETBEAT_HTTP_PORTS, value: "8069"}

  - name: openproject
    ports:
      - port: 3000
    annotations:
      nginx:
        - http:
            - server: openproject.*
              locations:
                - /
    containers:
      - name: openproject
        image: minux:5000/openproject:latest
        imagePullPolicy: Always
      - <<: *packetbeat-agent
        env:
          - {name: PACKETBEAT_HTTP_PORTS,value: "3000"}

  - name: minecraft
    ports:
      - {port: 25565, name: minecraft}
      - {port: 9001,  name: fontail}
    annotations:
      nginx:
        - http:
          - server: minecraft.*
            port: 9001
            locations:
              - /
        - stream:
            - listen: 25565
    containers:
      - name: minecraft
        image: minux:5000/minecraft:latest
        imagePullPolicy: Always

  - name: knginx
    ports:
      - port: 80
    nodeSelector:
      kubernetes.io/hostname: 192.168.1.160
    containers:
      - name: knginx
        image: minux:5000/knginx:latest
        imagePullPolicy: Always
        ports:
          - {containerPort: 80,    hostPort: 80}
          - {containerPort: 25565, hostPort: 25565}
          - {containerPort: 25566, hostPort: 25566}
        env:
          - <<: *etcd-host
      - <<: *packetbeat-agent
        env:
          - {name: PACKETBEAT_HTTP_PORTS, value: "80"}

  - name: jenkins
    ports:
      - port: 8080
    annotations:
      nginx:
        - http:
          - server: default
            locations:
              - /jenkins
    nodeSelector:
      kubernetes.io/hostname: 192.168.1.160
    containers:
      - name: jenkins
        image: myjenkins:latest
        imagePullPolicy: Never
        volumeMounts:
          - {name: jenkins, mountPath: /root/.jenkins}
          - {name: docker,  mountPath: /var/run/docker.sock}
    volumes:
      - name: jenkins
        hostPath:
          path: /root/docker-jenkins/jenkins
      - name: docker
        hostPath:
          path: /var/run/docker.sock

  - name: gocd
    ports:
      - port: 8153
    annotations:
      nginx:
        - http:
          - server: default
            locations:
              - /go
    nodeSelector:
      kubernetes.io/hostname: 192.168.1.160
    containers:
      - name: gocd
        image: goserver:latest
        imagePullPolicy: Never
        volumeMounts:
          - {name: go,       mountPath: /etc/go}
          - {name: goserver, mountPath: /etc/default/go-server}
          - {name: goagent,  mountPath: /etc/default/go-agent}
          - {name: db,       mountPath: /var/lib/go-server/db}
          - {name: docker,   mountPath: /var/run/docker.sock}
    volumes:
      - name: go
        hostPath:
          path: /root/docker-gocd/etc/go
      - name: goserver
        hostPath:
          path: /root/docker-gocd/etc/default/go-server
      - name: goagent
        hostPath:
          path: /root/docker-gocd/etc/default/go-agent
      - name: db
        hostPath:
          path: /root/docker-gocd/db
      - name: docker
        hostPath:
          path: /var/run/docker.sock

  - name: google
    ports:
      - port: 80
    endpoints:
      addresses:
        - IP: "74.125.225.7"

